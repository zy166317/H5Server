// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.9
// source: pb/game.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 关卡挑战
type ChallengeChapterReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChapterId    int32 `protobuf:"varint,1,opt,name=ChapterId,proto3" json:"ChapterId,omitempty"`       //关卡id
	CompleteTime int32 `protobuf:"varint,2,opt,name=CompleteTime,proto3" json:"CompleteTime,omitempty"` //闯关时长 单位:s
}

func (x *ChallengeChapterReq) Reset() {
	*x = ChallengeChapterReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_game_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChallengeChapterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChallengeChapterReq) ProtoMessage() {}

func (x *ChallengeChapterReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_game_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChallengeChapterReq.ProtoReflect.Descriptor instead.
func (*ChallengeChapterReq) Descriptor() ([]byte, []int) {
	return file_pb_game_proto_rawDescGZIP(), []int{0}
}

func (x *ChallengeChapterReq) GetChapterId() int32 {
	if x != nil {
		return x.ChapterId
	}
	return 0
}

func (x *ChallengeChapterReq) GetCompleteTime() int32 {
	if x != nil {
		return x.CompleteTime
	}
	return 0
}

type ChallengeChapterRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code           int32           `protobuf:"varint,1,opt,name=Code,proto3" json:"Code,omitempty"`
	Rewards        map[int32]int32 `protobuf:"bytes,2,rep,name=Rewards,proto3" json:"Rewards,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	ChapterRecords map[int32]int32 `protobuf:"bytes,3,rep,name=ChapterRecords,proto3" json:"ChapterRecords,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"` //通过关卡记录，直接覆盖
	BackPack       map[int32]int32 `protobuf:"bytes,4,rep,name=BackPack,proto3" json:"BackPack,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`             //背包信息
}

func (x *ChallengeChapterRsp) Reset() {
	*x = ChallengeChapterRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_game_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChallengeChapterRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChallengeChapterRsp) ProtoMessage() {}

func (x *ChallengeChapterRsp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_game_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChallengeChapterRsp.ProtoReflect.Descriptor instead.
func (*ChallengeChapterRsp) Descriptor() ([]byte, []int) {
	return file_pb_game_proto_rawDescGZIP(), []int{1}
}

func (x *ChallengeChapterRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ChallengeChapterRsp) GetRewards() map[int32]int32 {
	if x != nil {
		return x.Rewards
	}
	return nil
}

func (x *ChallengeChapterRsp) GetChapterRecords() map[int32]int32 {
	if x != nil {
		return x.ChapterRecords
	}
	return nil
}

func (x *ChallengeChapterRsp) GetBackPack() map[int32]int32 {
	if x != nil {
		return x.BackPack
	}
	return nil
}

// 使用道具
type UsePropsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PropId int32 `protobuf:"varint,1,opt,name=PropId,proto3" json:"PropId,omitempty"`
}

func (x *UsePropsReq) Reset() {
	*x = UsePropsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_game_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsePropsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsePropsReq) ProtoMessage() {}

func (x *UsePropsReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_game_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsePropsReq.ProtoReflect.Descriptor instead.
func (*UsePropsReq) Descriptor() ([]byte, []int) {
	return file_pb_game_proto_rawDescGZIP(), []int{2}
}

func (x *UsePropsReq) GetPropId() int32 {
	if x != nil {
		return x.PropId
	}
	return 0
}

type UsePropsRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     int32           `protobuf:"varint,1,opt,name=Code,proto3" json:"Code,omitempty"`
	Backpack map[int32]int32 `protobuf:"bytes,2,rep,name=Backpack,proto3" json:"Backpack,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"` //背包
	PropId   int32           `protobuf:"varint,3,opt,name=PropId,proto3" json:"PropId,omitempty"`
}

func (x *UsePropsRsp) Reset() {
	*x = UsePropsRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_game_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsePropsRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsePropsRsp) ProtoMessage() {}

func (x *UsePropsRsp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_game_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsePropsRsp.ProtoReflect.Descriptor instead.
func (*UsePropsRsp) Descriptor() ([]byte, []int) {
	return file_pb_game_proto_rawDescGZIP(), []int{3}
}

func (x *UsePropsRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UsePropsRsp) GetBackpack() map[int32]int32 {
	if x != nil {
		return x.Backpack
	}
	return nil
}

func (x *UsePropsRsp) GetPropId() int32 {
	if x != nil {
		return x.PropId
	}
	return 0
}

// 通知道具变动
type NoticePropsChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Backpack map[int32]int32 `protobuf:"bytes,1,rep,name=Backpack,proto3" json:"Backpack,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"` //背包
}

func (x *NoticePropsChange) Reset() {
	*x = NoticePropsChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_game_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoticePropsChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoticePropsChange) ProtoMessage() {}

func (x *NoticePropsChange) ProtoReflect() protoreflect.Message {
	mi := &file_pb_game_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoticePropsChange.ProtoReflect.Descriptor instead.
func (*NoticePropsChange) Descriptor() ([]byte, []int) {
	return file_pb_game_proto_rawDescGZIP(), []int{4}
}

func (x *NoticePropsChange) GetBackpack() map[int32]int32 {
	if x != nil {
		return x.Backpack
	}
	return nil
}

// 切换挡板
type SwitchBafflePlateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NewId int32 `protobuf:"varint,1,opt,name=NewId,proto3" json:"NewId,omitempty"` //新挡板id
}

func (x *SwitchBafflePlateReq) Reset() {
	*x = SwitchBafflePlateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_game_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SwitchBafflePlateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwitchBafflePlateReq) ProtoMessage() {}

func (x *SwitchBafflePlateReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_game_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwitchBafflePlateReq.ProtoReflect.Descriptor instead.
func (*SwitchBafflePlateReq) Descriptor() ([]byte, []int) {
	return file_pb_game_proto_rawDescGZIP(), []int{5}
}

func (x *SwitchBafflePlateReq) GetNewId() int32 {
	if x != nil {
		return x.NewId
	}
	return 0
}

type SwitchBafflePlateRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code        int32 `protobuf:"varint,1,opt,name=Code,proto3" json:"Code,omitempty"`
	CurrPlateId int32 `protobuf:"varint,2,opt,name=CurrPlateId,proto3" json:"CurrPlateId,omitempty"`
	Counts      int32 `protobuf:"varint,3,opt,name=Counts,proto3" json:"Counts,omitempty"` //次数
}

func (x *SwitchBafflePlateRsp) Reset() {
	*x = SwitchBafflePlateRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_game_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SwitchBafflePlateRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwitchBafflePlateRsp) ProtoMessage() {}

func (x *SwitchBafflePlateRsp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_game_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwitchBafflePlateRsp.ProtoReflect.Descriptor instead.
func (*SwitchBafflePlateRsp) Descriptor() ([]byte, []int) {
	return file_pb_game_proto_rawDescGZIP(), []int{6}
}

func (x *SwitchBafflePlateRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SwitchBafflePlateRsp) GetCurrPlateId() int32 {
	if x != nil {
		return x.CurrPlateId
	}
	return 0
}

func (x *SwitchBafflePlateRsp) GetCounts() int32 {
	if x != nil {
		return x.Counts
	}
	return 0
}

// 实时结算
type GameCollectPropsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PropId int32 `protobuf:"varint,1,opt,name=PropId,proto3" json:"PropId,omitempty"`
}

func (x *GameCollectPropsReq) Reset() {
	*x = GameCollectPropsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_game_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameCollectPropsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameCollectPropsReq) ProtoMessage() {}

func (x *GameCollectPropsReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_game_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameCollectPropsReq.ProtoReflect.Descriptor instead.
func (*GameCollectPropsReq) Descriptor() ([]byte, []int) {
	return file_pb_game_proto_rawDescGZIP(), []int{7}
}

func (x *GameCollectPropsReq) GetPropId() int32 {
	if x != nil {
		return x.PropId
	}
	return 0
}

type GameCollectPropsRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     int32           `protobuf:"varint,1,opt,name=Code,proto3" json:"Code,omitempty"`
	Backpack map[int32]int32 `protobuf:"bytes,2,rep,name=Backpack,proto3" json:"Backpack,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"` //背包
	PropId   int32           `protobuf:"varint,3,opt,name=PropId,proto3" json:"PropId,omitempty"`
}

func (x *GameCollectPropsRsp) Reset() {
	*x = GameCollectPropsRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_game_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameCollectPropsRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameCollectPropsRsp) ProtoMessage() {}

func (x *GameCollectPropsRsp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_game_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameCollectPropsRsp.ProtoReflect.Descriptor instead.
func (*GameCollectPropsRsp) Descriptor() ([]byte, []int) {
	return file_pb_game_proto_rawDescGZIP(), []int{8}
}

func (x *GameCollectPropsRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GameCollectPropsRsp) GetBackpack() map[int32]int32 {
	if x != nil {
		return x.Backpack
	}
	return nil
}

func (x *GameCollectPropsRsp) GetPropId() int32 {
	if x != nil {
		return x.PropId
	}
	return 0
}

// 商店购买
type ShopBuyingReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PropId int32 `protobuf:"varint,1,opt,name=PropId,proto3" json:"PropId,omitempty"` //商品id
}

func (x *ShopBuyingReq) Reset() {
	*x = ShopBuyingReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_game_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopBuyingReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopBuyingReq) ProtoMessage() {}

func (x *ShopBuyingReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_game_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopBuyingReq.ProtoReflect.Descriptor instead.
func (*ShopBuyingReq) Descriptor() ([]byte, []int) {
	return file_pb_game_proto_rawDescGZIP(), []int{9}
}

func (x *ShopBuyingReq) GetPropId() int32 {
	if x != nil {
		return x.PropId
	}
	return 0
}

type ShopBuyingRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     int32           `protobuf:"varint,1,opt,name=Code,proto3" json:"Code,omitempty"`
	BackPack map[int32]int32 `protobuf:"bytes,2,rep,name=BackPack,proto3" json:"BackPack,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"` //背包
	Rewards  map[int32]int32 `protobuf:"bytes,3,rep,name=Rewards,proto3" json:"Rewards,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *ShopBuyingRsp) Reset() {
	*x = ShopBuyingRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_game_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShopBuyingRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShopBuyingRsp) ProtoMessage() {}

func (x *ShopBuyingRsp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_game_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShopBuyingRsp.ProtoReflect.Descriptor instead.
func (*ShopBuyingRsp) Descriptor() ([]byte, []int) {
	return file_pb_game_proto_rawDescGZIP(), []int{10}
}

func (x *ShopBuyingRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ShopBuyingRsp) GetBackPack() map[int32]int32 {
	if x != nil {
		return x.BackPack
	}
	return nil
}

func (x *ShopBuyingRsp) GetRewards() map[int32]int32 {
	if x != nil {
		return x.Rewards
	}
	return nil
}

type RankInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid   string `protobuf:"bytes,1,opt,name=Uid,proto3" json:"Uid,omitempty"`
	Stars int32  `protobuf:"varint,2,opt,name=Stars,proto3" json:"Stars,omitempty"`
}

func (x *RankInfo) Reset() {
	*x = RankInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_game_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RankInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RankInfo) ProtoMessage() {}

func (x *RankInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pb_game_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RankInfo.ProtoReflect.Descriptor instead.
func (*RankInfo) Descriptor() ([]byte, []int) {
	return file_pb_game_proto_rawDescGZIP(), []int{11}
}

func (x *RankInfo) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *RankInfo) GetStars() int32 {
	if x != nil {
		return x.Stars
	}
	return 0
}

// 获取昨日名次
type YesterdayRankReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *YesterdayRankReq) Reset() {
	*x = YesterdayRankReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_game_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *YesterdayRankReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*YesterdayRankReq) ProtoMessage() {}

func (x *YesterdayRankReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_game_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use YesterdayRankReq.ProtoReflect.Descriptor instead.
func (*YesterdayRankReq) Descriptor() ([]byte, []int) {
	return file_pb_game_proto_rawDescGZIP(), []int{12}
}

type YesterdayRankRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32 `protobuf:"varint,1,opt,name=Code,proto3" json:"Code,omitempty"`
	Rank int32 `protobuf:"varint,2,opt,name=Rank,proto3" json:"Rank,omitempty"` //名次
}

func (x *YesterdayRankRsp) Reset() {
	*x = YesterdayRankRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_game_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *YesterdayRankRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*YesterdayRankRsp) ProtoMessage() {}

func (x *YesterdayRankRsp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_game_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use YesterdayRankRsp.ProtoReflect.Descriptor instead.
func (*YesterdayRankRsp) Descriptor() ([]byte, []int) {
	return file_pb_game_proto_rawDescGZIP(), []int{13}
}

func (x *YesterdayRankRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *YesterdayRankRsp) GetRank() int32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

// 领取排行榜奖励
type ReceiveRankRewardReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReceiveRankRewardReq) Reset() {
	*x = ReceiveRankRewardReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_game_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceiveRankRewardReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiveRankRewardReq) ProtoMessage() {}

func (x *ReceiveRankRewardReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_game_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiveRankRewardReq.ProtoReflect.Descriptor instead.
func (*ReceiveRankRewardReq) Descriptor() ([]byte, []int) {
	return file_pb_game_proto_rawDescGZIP(), []int{14}
}

type ReceiveRankRewardRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32           `protobuf:"varint,1,opt,name=Code,proto3" json:"Code,omitempty"`
	Rewards map[int32]int32 `protobuf:"bytes,2,rep,name=Rewards,proto3" json:"Rewards,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	RankTag int32           `protobuf:"varint,3,opt,name=RankTag,proto3" json:"RankTag,omitempty"` //已领取标志更新
}

func (x *ReceiveRankRewardRsp) Reset() {
	*x = ReceiveRankRewardRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_game_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceiveRankRewardRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiveRankRewardRsp) ProtoMessage() {}

func (x *ReceiveRankRewardRsp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_game_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiveRankRewardRsp.ProtoReflect.Descriptor instead.
func (*ReceiveRankRewardRsp) Descriptor() ([]byte, []int) {
	return file_pb_game_proto_rawDescGZIP(), []int{15}
}

func (x *ReceiveRankRewardRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ReceiveRankRewardRsp) GetRewards() map[int32]int32 {
	if x != nil {
		return x.Rewards
	}
	return nil
}

func (x *ReceiveRankRewardRsp) GetRankTag() int32 {
	if x != nil {
		return x.RankTag
	}
	return 0
}

// 看完广告发货
type WatchAdvRewardsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdvId int32 `protobuf:"varint,1,opt,name=AdvId,proto3" json:"AdvId,omitempty"` //广告id
}

func (x *WatchAdvRewardsReq) Reset() {
	*x = WatchAdvRewardsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_game_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchAdvRewardsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchAdvRewardsReq) ProtoMessage() {}

func (x *WatchAdvRewardsReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_game_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchAdvRewardsReq.ProtoReflect.Descriptor instead.
func (*WatchAdvRewardsReq) Descriptor() ([]byte, []int) {
	return file_pb_game_proto_rawDescGZIP(), []int{16}
}

func (x *WatchAdvRewardsReq) GetAdvId() int32 {
	if x != nil {
		return x.AdvId
	}
	return 0
}

type WatchAdvRewardsRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     int32           `protobuf:"varint,1,opt,name=Code,proto3" json:"Code,omitempty"`
	Rewards  map[int32]int32 `protobuf:"bytes,2,rep,name=Rewards,proto3" json:"Rewards,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	Backpack map[int32]int32 `protobuf:"bytes,3,rep,name=Backpack,proto3" json:"Backpack,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *WatchAdvRewardsRsp) Reset() {
	*x = WatchAdvRewardsRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_game_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchAdvRewardsRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchAdvRewardsRsp) ProtoMessage() {}

func (x *WatchAdvRewardsRsp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_game_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchAdvRewardsRsp.ProtoReflect.Descriptor instead.
func (*WatchAdvRewardsRsp) Descriptor() ([]byte, []int) {
	return file_pb_game_proto_rawDescGZIP(), []int{17}
}

func (x *WatchAdvRewardsRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *WatchAdvRewardsRsp) GetRewards() map[int32]int32 {
	if x != nil {
		return x.Rewards
	}
	return nil
}

func (x *WatchAdvRewardsRsp) GetBackpack() map[int32]int32 {
	if x != nil {
		return x.Backpack
	}
	return nil
}

var File_pb_game_proto protoreflect.FileDescriptor

var file_pb_game_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x70, 0x62, 0x2f, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x02, 0x70, 0x62, 0x22, 0x57, 0x0a, 0x13, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65,
	0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x68,
	0x61, 0x70, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x43,
	0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xbd, 0x03, 0x0a,
	0x13, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65,
	0x72, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x3e, 0x0a, 0x07, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x62, 0x2e, 0x43,
	0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x52,
	0x73, 0x70, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x07, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x53, 0x0a, 0x0e, 0x43, 0x68, 0x61, 0x70,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2b, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x43,
	0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x52, 0x73, 0x70, 0x2e, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65,
	0x72, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0e, 0x43,
	0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x41, 0x0a,
	0x08, 0x42, 0x61, 0x63, 0x6b, 0x50, 0x61, 0x63, 0x6b, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x43, 0x68,
	0x61, 0x70, 0x74, 0x65, 0x72, 0x52, 0x73, 0x70, 0x2e, 0x42, 0x61, 0x63, 0x6b, 0x50, 0x61, 0x63,
	0x6b, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x42, 0x61, 0x63, 0x6b, 0x50, 0x61, 0x63, 0x6b,
	0x1a, 0x3a, 0x0a, 0x0c, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x41, 0x0a, 0x13,
	0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a,
	0x3b, 0x0a, 0x0d, 0x42, 0x61, 0x63, 0x6b, 0x50, 0x61, 0x63, 0x6b, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x25, 0x0a, 0x0b,
	0x55, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x73, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x50,
	0x72, 0x6f, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x50, 0x72, 0x6f,
	0x70, 0x49, 0x64, 0x22, 0xb1, 0x01, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x73,
	0x52, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x39, 0x0a, 0x08, 0x42, 0x61, 0x63, 0x6b, 0x70,
	0x61, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x62, 0x2e, 0x55,
	0x73, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x73, 0x52, 0x73, 0x70, 0x2e, 0x42, 0x61, 0x63, 0x6b, 0x70,
	0x61, 0x63, 0x6b, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x42, 0x61, 0x63, 0x6b, 0x70, 0x61,
	0x63, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x72, 0x6f, 0x70, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x50, 0x72, 0x6f, 0x70, 0x49, 0x64, 0x1a, 0x3b, 0x0a, 0x0d, 0x42, 0x61,
	0x63, 0x6b, 0x70, 0x61, 0x63, 0x6b, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x91, 0x01, 0x0a, 0x11, 0x4e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x3f, 0x0a,
	0x08, 0x42, 0x61, 0x63, 0x6b, 0x70, 0x61, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x70, 0x62, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x73,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x42, 0x61, 0x63, 0x6b, 0x70, 0x61, 0x63, 0x6b, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x42, 0x61, 0x63, 0x6b, 0x70, 0x61, 0x63, 0x6b, 0x1a, 0x3b,
	0x0a, 0x0d, 0x42, 0x61, 0x63, 0x6b, 0x70, 0x61, 0x63, 0x6b, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x2c, 0x0a, 0x14, 0x53,
	0x77, 0x69, 0x74, 0x63, 0x68, 0x42, 0x61, 0x66, 0x66, 0x6c, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x4e, 0x65, 0x77, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x4e, 0x65, 0x77, 0x49, 0x64, 0x22, 0x64, 0x0a, 0x14, 0x53, 0x77, 0x69,
	0x74, 0x63, 0x68, 0x42, 0x61, 0x66, 0x66, 0x6c, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x73,
	0x70, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x75, 0x72, 0x72, 0x50, 0x6c, 0x61,
	0x74, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x43, 0x75, 0x72, 0x72,
	0x50, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x22,
	0x2d, 0x0a, 0x13, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x50, 0x72,
	0x6f, 0x70, 0x73, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x72, 0x6f, 0x70, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x50, 0x72, 0x6f, 0x70, 0x49, 0x64, 0x22, 0xc1,
	0x01, 0x0a, 0x13, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x50, 0x72,
	0x6f, 0x70, 0x73, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x41, 0x0a, 0x08, 0x42, 0x61,
	0x63, 0x6b, 0x70, 0x61, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x70,
	0x62, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x50, 0x72, 0x6f,
	0x70, 0x73, 0x52, 0x73, 0x70, 0x2e, 0x42, 0x61, 0x63, 0x6b, 0x70, 0x61, 0x63, 0x6b, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x08, 0x42, 0x61, 0x63, 0x6b, 0x70, 0x61, 0x63, 0x6b, 0x12, 0x16, 0x0a,
	0x06, 0x50, 0x72, 0x6f, 0x70, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x50,
	0x72, 0x6f, 0x70, 0x49, 0x64, 0x1a, 0x3b, 0x0a, 0x0d, 0x42, 0x61, 0x63, 0x6b, 0x70, 0x61, 0x63,
	0x6b, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x27, 0x0a, 0x0d, 0x53, 0x68, 0x6f, 0x70, 0x42, 0x75, 0x79, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x72, 0x6f, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x50, 0x72, 0x6f, 0x70, 0x49, 0x64, 0x22, 0x93, 0x02, 0x0a, 0x0d,
	0x53, 0x68, 0x6f, 0x70, 0x42, 0x75, 0x79, 0x69, 0x6e, 0x67, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a,
	0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x3b, 0x0a, 0x08, 0x42, 0x61, 0x63, 0x6b, 0x50, 0x61, 0x63, 0x6b, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x42, 0x75, 0x79,
	0x69, 0x6e, 0x67, 0x52, 0x73, 0x70, 0x2e, 0x42, 0x61, 0x63, 0x6b, 0x50, 0x61, 0x63, 0x6b, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x42, 0x61, 0x63, 0x6b, 0x50, 0x61, 0x63, 0x6b, 0x12, 0x38,
	0x0a, 0x07, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x42, 0x75, 0x79, 0x69, 0x6e, 0x67, 0x52,
	0x73, 0x70, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x07, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x1a, 0x3b, 0x0a, 0x0d, 0x42, 0x61, 0x63, 0x6b,
	0x50, 0x61, 0x63, 0x6b, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3a, 0x0a, 0x0c, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x32, 0x0a, 0x08, 0x52, 0x61, 0x6e, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a,
	0x03, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x69, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x53, 0x74, 0x61, 0x72, 0x73, 0x22, 0x12, 0x0a, 0x10, 0x59, 0x65, 0x73, 0x74, 0x65, 0x72, 0x64,
	0x61, 0x79, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x22, 0x3a, 0x0a, 0x10, 0x59, 0x65, 0x73,
	0x74, 0x65, 0x72, 0x64, 0x61, 0x79, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a,
	0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x52, 0x61, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x52, 0x61, 0x6e, 0x6b, 0x22, 0x16, 0x0a, 0x14, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x22, 0xc1, 0x01,
	0x0a, 0x14, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x3f, 0x0a, 0x07, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x70, 0x62,
	0x2e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x52, 0x73, 0x70, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x07, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x52,
	0x61, 0x6e, 0x6b, 0x54, 0x61, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x52, 0x61,
	0x6e, 0x6b, 0x54, 0x61, 0x67, 0x1a, 0x3a, 0x0a, 0x0c, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x2a, 0x0a, 0x12, 0x57, 0x61, 0x74, 0x63, 0x68, 0x41, 0x64, 0x76, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x64, 0x76, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x41, 0x64, 0x76, 0x49, 0x64, 0x22, 0xa2, 0x02,
	0x0a, 0x12, 0x57, 0x61, 0x74, 0x63, 0x68, 0x41, 0x64, 0x76, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x73, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x3d, 0x0a, 0x07, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70, 0x62, 0x2e, 0x57,
	0x61, 0x74, 0x63, 0x68, 0x41, 0x64, 0x76, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x52, 0x73,
	0x70, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x40, 0x0a, 0x08, 0x42, 0x61, 0x63, 0x6b, 0x70,
	0x61, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x62, 0x2e, 0x57,
	0x61, 0x74, 0x63, 0x68, 0x41, 0x64, 0x76, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x52, 0x73,
	0x70, 0x2e, 0x42, 0x61, 0x63, 0x6b, 0x70, 0x61, 0x63, 0x6b, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x08, 0x42, 0x61, 0x63, 0x6b, 0x70, 0x61, 0x63, 0x6b, 0x1a, 0x3a, 0x0a, 0x0c, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3b, 0x0a, 0x0d, 0x42, 0x61, 0x63, 0x6b, 0x70, 0x61, 0x63,
	0x6b, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_pb_game_proto_rawDescOnce sync.Once
	file_pb_game_proto_rawDescData = file_pb_game_proto_rawDesc
)

func file_pb_game_proto_rawDescGZIP() []byte {
	file_pb_game_proto_rawDescOnce.Do(func() {
		file_pb_game_proto_rawDescData = protoimpl.X.CompressGZIP(file_pb_game_proto_rawDescData)
	})
	return file_pb_game_proto_rawDescData
}

var file_pb_game_proto_msgTypes = make([]protoimpl.MessageInfo, 29)
var file_pb_game_proto_goTypes = []interface{}{
	(*ChallengeChapterReq)(nil),  // 0: pb.ChallengeChapterReq
	(*ChallengeChapterRsp)(nil),  // 1: pb.ChallengeChapterRsp
	(*UsePropsReq)(nil),          // 2: pb.UsePropsReq
	(*UsePropsRsp)(nil),          // 3: pb.UsePropsRsp
	(*NoticePropsChange)(nil),    // 4: pb.NoticePropsChange
	(*SwitchBafflePlateReq)(nil), // 5: pb.SwitchBafflePlateReq
	(*SwitchBafflePlateRsp)(nil), // 6: pb.SwitchBafflePlateRsp
	(*GameCollectPropsReq)(nil),  // 7: pb.GameCollectPropsReq
	(*GameCollectPropsRsp)(nil),  // 8: pb.GameCollectPropsRsp
	(*ShopBuyingReq)(nil),        // 9: pb.ShopBuyingReq
	(*ShopBuyingRsp)(nil),        // 10: pb.ShopBuyingRsp
	(*RankInfo)(nil),             // 11: pb.RankInfo
	(*YesterdayRankReq)(nil),     // 12: pb.YesterdayRankReq
	(*YesterdayRankRsp)(nil),     // 13: pb.YesterdayRankRsp
	(*ReceiveRankRewardReq)(nil), // 14: pb.ReceiveRankRewardReq
	(*ReceiveRankRewardRsp)(nil), // 15: pb.ReceiveRankRewardRsp
	(*WatchAdvRewardsReq)(nil),   // 16: pb.WatchAdvRewardsReq
	(*WatchAdvRewardsRsp)(nil),   // 17: pb.WatchAdvRewardsRsp
	nil,                          // 18: pb.ChallengeChapterRsp.RewardsEntry
	nil,                          // 19: pb.ChallengeChapterRsp.ChapterRecordsEntry
	nil,                          // 20: pb.ChallengeChapterRsp.BackPackEntry
	nil,                          // 21: pb.UsePropsRsp.BackpackEntry
	nil,                          // 22: pb.NoticePropsChange.BackpackEntry
	nil,                          // 23: pb.GameCollectPropsRsp.BackpackEntry
	nil,                          // 24: pb.ShopBuyingRsp.BackPackEntry
	nil,                          // 25: pb.ShopBuyingRsp.RewardsEntry
	nil,                          // 26: pb.ReceiveRankRewardRsp.RewardsEntry
	nil,                          // 27: pb.WatchAdvRewardsRsp.RewardsEntry
	nil,                          // 28: pb.WatchAdvRewardsRsp.BackpackEntry
}
var file_pb_game_proto_depIdxs = []int32{
	18, // 0: pb.ChallengeChapterRsp.Rewards:type_name -> pb.ChallengeChapterRsp.RewardsEntry
	19, // 1: pb.ChallengeChapterRsp.ChapterRecords:type_name -> pb.ChallengeChapterRsp.ChapterRecordsEntry
	20, // 2: pb.ChallengeChapterRsp.BackPack:type_name -> pb.ChallengeChapterRsp.BackPackEntry
	21, // 3: pb.UsePropsRsp.Backpack:type_name -> pb.UsePropsRsp.BackpackEntry
	22, // 4: pb.NoticePropsChange.Backpack:type_name -> pb.NoticePropsChange.BackpackEntry
	23, // 5: pb.GameCollectPropsRsp.Backpack:type_name -> pb.GameCollectPropsRsp.BackpackEntry
	24, // 6: pb.ShopBuyingRsp.BackPack:type_name -> pb.ShopBuyingRsp.BackPackEntry
	25, // 7: pb.ShopBuyingRsp.Rewards:type_name -> pb.ShopBuyingRsp.RewardsEntry
	26, // 8: pb.ReceiveRankRewardRsp.Rewards:type_name -> pb.ReceiveRankRewardRsp.RewardsEntry
	27, // 9: pb.WatchAdvRewardsRsp.Rewards:type_name -> pb.WatchAdvRewardsRsp.RewardsEntry
	28, // 10: pb.WatchAdvRewardsRsp.Backpack:type_name -> pb.WatchAdvRewardsRsp.BackpackEntry
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_pb_game_proto_init() }
func file_pb_game_proto_init() {
	if File_pb_game_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pb_game_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChallengeChapterReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_game_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChallengeChapterRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_game_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UsePropsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_game_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UsePropsRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_game_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoticePropsChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_game_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SwitchBafflePlateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_game_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SwitchBafflePlateRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_game_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameCollectPropsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_game_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameCollectPropsRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_game_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopBuyingReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_game_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShopBuyingRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_game_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RankInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_game_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*YesterdayRankReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_game_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*YesterdayRankRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_game_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReceiveRankRewardReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_game_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReceiveRankRewardRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_game_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchAdvRewardsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_game_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchAdvRewardsRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pb_game_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   29,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pb_game_proto_goTypes,
		DependencyIndexes: file_pb_game_proto_depIdxs,
		MessageInfos:      file_pb_game_proto_msgTypes,
	}.Build()
	File_pb_game_proto = out.File
	file_pb_game_proto_rawDesc = nil
	file_pb_game_proto_goTypes = nil
	file_pb_game_proto_depIdxs = nil
}
