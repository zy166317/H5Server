// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.9
// source: pb/game.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 关卡挑战
type ChallengeChapterReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChapterId    int32 `protobuf:"varint,1,opt,name=ChapterId,proto3" json:"ChapterId,omitempty"`       //关卡id
	CompleteTime int32 `protobuf:"varint,2,opt,name=CompleteTime,proto3" json:"CompleteTime,omitempty"` //闯关时长 单位:s
}

func (x *ChallengeChapterReq) Reset() {
	*x = ChallengeChapterReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_game_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChallengeChapterReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChallengeChapterReq) ProtoMessage() {}

func (x *ChallengeChapterReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_game_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChallengeChapterReq.ProtoReflect.Descriptor instead.
func (*ChallengeChapterReq) Descriptor() ([]byte, []int) {
	return file_pb_game_proto_rawDescGZIP(), []int{0}
}

func (x *ChallengeChapterReq) GetChapterId() int32 {
	if x != nil {
		return x.ChapterId
	}
	return 0
}

func (x *ChallengeChapterReq) GetCompleteTime() int32 {
	if x != nil {
		return x.CompleteTime
	}
	return 0
}

type ChallengeChapterRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code           int32           `protobuf:"varint,1,opt,name=Code,proto3" json:"Code,omitempty"`
	Rewards        map[int32]int32 `protobuf:"bytes,2,rep,name=Rewards,proto3" json:"Rewards,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	ChapterRecords map[int32]int32 `protobuf:"bytes,3,rep,name=ChapterRecords,proto3" json:"ChapterRecords,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"` //通过关卡记录，直接覆盖
}

func (x *ChallengeChapterRsp) Reset() {
	*x = ChallengeChapterRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_game_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChallengeChapterRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChallengeChapterRsp) ProtoMessage() {}

func (x *ChallengeChapterRsp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_game_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChallengeChapterRsp.ProtoReflect.Descriptor instead.
func (*ChallengeChapterRsp) Descriptor() ([]byte, []int) {
	return file_pb_game_proto_rawDescGZIP(), []int{1}
}

func (x *ChallengeChapterRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ChallengeChapterRsp) GetRewards() map[int32]int32 {
	if x != nil {
		return x.Rewards
	}
	return nil
}

func (x *ChallengeChapterRsp) GetChapterRecords() map[int32]int32 {
	if x != nil {
		return x.ChapterRecords
	}
	return nil
}

// 使用道具
type UsePropsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PropId int32 `protobuf:"varint,1,opt,name=PropId,proto3" json:"PropId,omitempty"`
}

func (x *UsePropsReq) Reset() {
	*x = UsePropsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_game_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsePropsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsePropsReq) ProtoMessage() {}

func (x *UsePropsReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_game_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsePropsReq.ProtoReflect.Descriptor instead.
func (*UsePropsReq) Descriptor() ([]byte, []int) {
	return file_pb_game_proto_rawDescGZIP(), []int{2}
}

func (x *UsePropsReq) GetPropId() int32 {
	if x != nil {
		return x.PropId
	}
	return 0
}

type UsePropsRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code        int32 `protobuf:"varint,1,opt,name=Code,proto3" json:"Code,omitempty"`
	CurrGoldNum int32 `protobuf:"varint,2,opt,name=CurrGoldNum,proto3" json:"CurrGoldNum,omitempty"` //当前剩余金币数量
}

func (x *UsePropsRsp) Reset() {
	*x = UsePropsRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_game_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsePropsRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsePropsRsp) ProtoMessage() {}

func (x *UsePropsRsp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_game_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsePropsRsp.ProtoReflect.Descriptor instead.
func (*UsePropsRsp) Descriptor() ([]byte, []int) {
	return file_pb_game_proto_rawDescGZIP(), []int{3}
}

func (x *UsePropsRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UsePropsRsp) GetCurrGoldNum() int32 {
	if x != nil {
		return x.CurrGoldNum
	}
	return 0
}

// 通知道具变动
type NoticePropsChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Gold     int32           `protobuf:"varint,1,opt,name=Gold,proto3" json:"Gold,omitempty"`
	Backpack map[int32]int32 `protobuf:"bytes,2,rep,name=Backpack,proto3" json:"Backpack,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"` //背包
}

func (x *NoticePropsChange) Reset() {
	*x = NoticePropsChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_game_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoticePropsChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoticePropsChange) ProtoMessage() {}

func (x *NoticePropsChange) ProtoReflect() protoreflect.Message {
	mi := &file_pb_game_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoticePropsChange.ProtoReflect.Descriptor instead.
func (*NoticePropsChange) Descriptor() ([]byte, []int) {
	return file_pb_game_proto_rawDescGZIP(), []int{4}
}

func (x *NoticePropsChange) GetGold() int32 {
	if x != nil {
		return x.Gold
	}
	return 0
}

func (x *NoticePropsChange) GetBackpack() map[int32]int32 {
	if x != nil {
		return x.Backpack
	}
	return nil
}

var File_pb_game_proto protoreflect.FileDescriptor

var file_pb_game_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x70, 0x62, 0x2f, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x02, 0x70, 0x62, 0x22, 0x57, 0x0a, 0x13, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65,
	0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x68,
	0x61, 0x70, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x43,
	0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xbd, 0x02, 0x0a,
	0x13, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65,
	0x72, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x3e, 0x0a, 0x07, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x62, 0x2e, 0x43,
	0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x52,
	0x73, 0x70, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x07, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x53, 0x0a, 0x0e, 0x43, 0x68, 0x61, 0x70,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2b, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x43,
	0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x52, 0x73, 0x70, 0x2e, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65,
	0x72, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0e, 0x43,
	0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x1a, 0x3a, 0x0a,
	0x0c, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x41, 0x0a, 0x13, 0x43, 0x68, 0x61,
	0x70, 0x74, 0x65, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x25, 0x0a, 0x0b,
	0x55, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x73, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x50,
	0x72, 0x6f, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x50, 0x72, 0x6f,
	0x70, 0x49, 0x64, 0x22, 0x43, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x73, 0x52,
	0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x75, 0x72, 0x72, 0x47, 0x6f,
	0x6c, 0x64, 0x4e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x43, 0x75, 0x72,
	0x72, 0x47, 0x6f, 0x6c, 0x64, 0x4e, 0x75, 0x6d, 0x22, 0xa5, 0x01, 0x0a, 0x11, 0x4e, 0x6f, 0x74,
	0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x47, 0x6f, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x47, 0x6f,
	0x6c, 0x64, 0x12, 0x3f, 0x0a, 0x08, 0x42, 0x61, 0x63, 0x6b, 0x70, 0x61, 0x63, 0x6b, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70, 0x62, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65,
	0x50, 0x72, 0x6f, 0x70, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e, 0x42, 0x61, 0x63, 0x6b,
	0x70, 0x61, 0x63, 0x6b, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x42, 0x61, 0x63, 0x6b, 0x70,
	0x61, 0x63, 0x6b, 0x1a, 0x3b, 0x0a, 0x0d, 0x42, 0x61, 0x63, 0x6b, 0x70, 0x61, 0x63, 0x6b, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pb_game_proto_rawDescOnce sync.Once
	file_pb_game_proto_rawDescData = file_pb_game_proto_rawDesc
)

func file_pb_game_proto_rawDescGZIP() []byte {
	file_pb_game_proto_rawDescOnce.Do(func() {
		file_pb_game_proto_rawDescData = protoimpl.X.CompressGZIP(file_pb_game_proto_rawDescData)
	})
	return file_pb_game_proto_rawDescData
}

var file_pb_game_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_pb_game_proto_goTypes = []interface{}{
	(*ChallengeChapterReq)(nil), // 0: pb.ChallengeChapterReq
	(*ChallengeChapterRsp)(nil), // 1: pb.ChallengeChapterRsp
	(*UsePropsReq)(nil),         // 2: pb.UsePropsReq
	(*UsePropsRsp)(nil),         // 3: pb.UsePropsRsp
	(*NoticePropsChange)(nil),   // 4: pb.NoticePropsChange
	nil,                         // 5: pb.ChallengeChapterRsp.RewardsEntry
	nil,                         // 6: pb.ChallengeChapterRsp.ChapterRecordsEntry
	nil,                         // 7: pb.NoticePropsChange.BackpackEntry
}
var file_pb_game_proto_depIdxs = []int32{
	5, // 0: pb.ChallengeChapterRsp.Rewards:type_name -> pb.ChallengeChapterRsp.RewardsEntry
	6, // 1: pb.ChallengeChapterRsp.ChapterRecords:type_name -> pb.ChallengeChapterRsp.ChapterRecordsEntry
	7, // 2: pb.NoticePropsChange.Backpack:type_name -> pb.NoticePropsChange.BackpackEntry
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_pb_game_proto_init() }
func file_pb_game_proto_init() {
	if File_pb_game_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pb_game_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChallengeChapterReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_game_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChallengeChapterRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_game_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UsePropsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_game_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UsePropsRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_game_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoticePropsChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pb_game_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pb_game_proto_goTypes,
		DependencyIndexes: file_pb_game_proto_depIdxs,
		MessageInfos:      file_pb_game_proto_msgTypes,
	}.Build()
	File_pb_game_proto = out.File
	file_pb_game_proto_rawDesc = nil
	file_pb_game_proto_goTypes = nil
	file_pb_game_proto_depIdxs = nil
}
